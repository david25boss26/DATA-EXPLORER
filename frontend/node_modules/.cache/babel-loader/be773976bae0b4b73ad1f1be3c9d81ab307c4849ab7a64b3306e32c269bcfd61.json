{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\nexport const uploadFile = async file => {\n  const formData = new FormData();\n  formData.append('file', file);\n  const response = await api.post('/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return response.data;\n};\nexport const executeQuery = async (query, tableName = null) => {\n  const response = await api.post('/query', {\n    query,\n    table_name: tableName\n  });\n  return response.data;\n};\nexport const generateSummary = async (tableName, sampleSize = 100, summaryType = 'general') => {\n  const response = await api.post('/summarize', {\n    table_name: tableName,\n    sample_size: sampleSize,\n    summary_type: summaryType\n  });\n  return response.data;\n};\nexport const getTables = async () => {\n  const response = await api.get('/tables');\n  return response.data;\n};\nexport const fetchPublicData = async (source, params = {}) => {\n  const response = await api.post('/public-data', {\n    source,\n    params\n  });\n  return response.data;\n};\nexport const healthCheck = async () => {\n  const response = await api.get('/health');\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","_error$response","data","message","uploadFile","file","formData","FormData","append","post","executeQuery","query","tableName","table_name","generateSummary","sampleSize","summaryType","sample_size","summary_type","getTables","get","fetchPublicData","source","params","healthCheck"],"sources":["/Users/ayushisingh/Desktop/projects/data_explorer_llm_dashboard/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\nexport const uploadFile = async (file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  \n  const response = await api.post('/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n  \n  return response.data;\n};\n\nexport const executeQuery = async (query, tableName = null) => {\n  const response = await api.post('/query', {\n    query,\n    table_name: tableName,\n  });\n  \n  return response.data;\n};\n\nexport const generateSummary = async (tableName, sampleSize = 100, summaryType = 'general') => {\n  const response = await api.post('/summarize', {\n    table_name: tableName,\n    sample_size: sampleSize,\n    summary_type: summaryType,\n  });\n  \n  return response.data;\n};\n\nexport const getTables = async () => {\n  const response = await api.get('/tables');\n  return response.data;\n};\n\nexport const fetchPublicData = async (source, params = {}) => {\n  const response = await api.post('/public-data', {\n    source,\n    params,\n  });\n  \n  return response.data;\n};\n\nexport const healthCheck = async () => {\n  const response = await api.get('/health');\n  return response.data;\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACVC,OAAO,CAACC,GAAG,CAAC,WAAAF,cAAA,GAAUD,MAAM,CAACI,MAAM,cAAAH,cAAA,uBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,eAAeL,MAAM,CAACM,GAAG,EAAE,CAAC;EAC9E,OAAON,MAAM;AACf,CAAC,EACAO,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,GAAG,CAACK,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACTT,OAAO,CAACK,KAAK,CAAC,YAAY,EAAE,EAAAI,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,IAAI,KAAIL,KAAK,CAACM,OAAO,CAAC;EAClE,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAE7B,MAAML,QAAQ,GAAG,MAAMlB,GAAG,CAAC2B,IAAI,CAAC,SAAS,EAAEH,QAAQ,EAAE;IACnDpB,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,OAAOc,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMQ,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,SAAS,GAAG,IAAI,KAAK;EAC7D,MAAMZ,QAAQ,GAAG,MAAMlB,GAAG,CAAC2B,IAAI,CAAC,QAAQ,EAAE;IACxCE,KAAK;IACLE,UAAU,EAAED;EACd,CAAC,CAAC;EAEF,OAAOZ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMY,eAAe,GAAG,MAAAA,CAAOF,SAAS,EAAEG,UAAU,GAAG,GAAG,EAAEC,WAAW,GAAG,SAAS,KAAK;EAC7F,MAAMhB,QAAQ,GAAG,MAAMlB,GAAG,CAAC2B,IAAI,CAAC,YAAY,EAAE;IAC5CI,UAAU,EAAED,SAAS;IACrBK,WAAW,EAAEF,UAAU;IACvBG,YAAY,EAAEF;EAChB,CAAC,CAAC;EAEF,OAAOhB,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMnB,QAAQ,GAAG,MAAMlB,GAAG,CAACsC,GAAG,CAAC,SAAS,CAAC;EACzC,OAAOpB,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMmB,eAAe,GAAG,MAAAA,CAAOC,MAAM,EAAEC,MAAM,GAAG,CAAC,CAAC,KAAK;EAC5D,MAAMvB,QAAQ,GAAG,MAAMlB,GAAG,CAAC2B,IAAI,CAAC,cAAc,EAAE;IAC9Ca,MAAM;IACNC;EACF,CAAC,CAAC;EAEF,OAAOvB,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMsB,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMxB,QAAQ,GAAG,MAAMlB,GAAG,CAACsC,GAAG,CAAC,SAAS,CAAC;EACzC,OAAOpB,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,eAAepB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}